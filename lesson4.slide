Concurrency
Lesson 4
20 May 2019
Tags: golang, go

Stanislav Kozina <skozina@redhat.com>
Red Hat, Inc.
https://github.com/RedHatOfficial/GoCourse

* Threads and goroutines
- Reminder: Threads share memory
- Go routines are light-weighted threads, cheap to spawn
- It should be fine to spawn thousands of goroutines
- Internally multiplexed across thread pool
- Spawned with simple go keyword

* Goroutines
.play lesson4/goroutines.go

* Channels
- Way to transfer data between goroutines
- Type of data is part of the channel type
- By default blocks on both tx/rx (but can be buffered too)
- Same operator to send and receive from channel
- Created with make()
.code lesson4/chan.go

* Channels
- Note that this is racy.. more about that later
.play lesson4/chan2.go

* Channels
- Unbuffered channels do block (and golang kindly detects deadlock)
.play lesson4/chan3.go

* Buffered channels
- Size of buffer as second argument to make()
.play lesson4/chan4.go

#last slide
* More Gophers
#The Go gopher was designed by Renee French. (http://reneefrench.blogspot.com/)
#Source https://golang.org/doc/gopher/bumper.png
#The design and this image is licensed under the Creative Commons 3.0 Attributions license.
.image ./common/bumper.png  _ 900
